"""New filter structure

Revision ID: new_filter_structure
Revises: 748f230d5c9b
Create Date: 2024-01-01 00:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'new_filter_structure'
down_revision = '748f230d5c9b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Создание таблицы filter_trees
    op.create_table('filter_trees',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )

    # Создание таблицы filter_institution_types
    op.create_table('filter_institution_types',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('filter_tree_id', sa.Integer(), nullable=False),
        sa.Column('type_key', sa.String(length=50), nullable=False),
        sa.Column('display_name', sa.String(length=100), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('sort_order', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['filter_tree_id'], ['filter_trees.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('filter_tree_id', 'type_key')
    )

    # Создание таблицы filter_generals
    op.create_table('filter_generals',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('institution_type_id', sa.Integer(), nullable=False),
        sa.Column('filter_key', sa.String(length=50), nullable=False),
        sa.Column('display_name', sa.String(length=100), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('sort_order', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['institution_type_id'], ['filter_institution_types.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # Создание таблицы filter_cities
    op.create_table('filter_cities',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('institution_type_id', sa.Integer(), nullable=False),
        sa.Column('general_filter_id', sa.Integer(), nullable=False),
        sa.Column('city_key', sa.String(length=10), nullable=False),
        sa.Column('display_name', sa.String(length=100), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('sort_order', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['general_filter_id'], ['filter_generals.id'], ),
        sa.ForeignKeyConstraint(['institution_type_id'], ['filter_institution_types.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('institution_type_id', 'general_filter_id', 'city_key')
    )

    # Создание таблицы filter_study_programs
    op.create_table('filter_study_programs',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('institution_type_id', sa.Integer(), nullable=False),
        sa.Column('general_filter_id', sa.Integer(), nullable=False),
        sa.Column('program_key', sa.String(length=50), nullable=False),
        sa.Column('display_name', sa.String(length=100), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('sort_order', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['general_filter_id'], ['filter_generals.id'], ),
        sa.ForeignKeyConstraint(['institution_type_id'], ['filter_institution_types.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('institution_type_id', 'general_filter_id', 'program_key')
    )

    # Создание таблицы filter_courses
    op.create_table('filter_courses',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('study_program_id', sa.Integer(), nullable=False),
        sa.Column('city_id', sa.Integer(), nullable=True),
        sa.Column('course_key', sa.String(length=20), nullable=False),
        sa.Column('display_name', sa.String(length=100), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('sort_order', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['city_id'], ['filter_cities.id'], ),
        sa.ForeignKeyConstraint(['study_program_id'], ['filter_study_programs.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('study_program_id', 'city_id', 'course_key')
    )

    # Создание таблицы filter_education_forms
    op.create_table('filter_education_forms',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('course_id', sa.Integer(), nullable=False),
        sa.Column('form_key', sa.String(length=20), nullable=False),
        sa.Column('display_name', sa.String(length=100), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('sort_order', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['course_id'], ['filter_courses.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('course_id', 'form_key')
    )

    # Создание таблицы filter_city_instances
    op.create_table('filter_city_instances',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('education_form_id', sa.Integer(), nullable=False),
        sa.Column('city_key', sa.String(length=10), nullable=False),
        sa.Column('display_name', sa.String(length=100), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('sort_order', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['education_form_id'], ['filter_education_forms.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('education_form_id', 'city_key')
    )

    # Создание таблицы filter_groups
    op.create_table('filter_groups',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('city_instance_id', sa.Integer(), nullable=False),
        sa.Column('group_name', sa.String(length=100), nullable=False),
        sa.Column('group_code', sa.String(length=50), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['city_instance_id'], ['filter_city_instances.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # Создание таблицы article_filters
    op.create_table('article_filters',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('article_id', sa.Integer(), nullable=False),
        sa.Column('filter_group_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ),
        sa.ForeignKeyConstraint(['filter_group_id'], ['filter_groups.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('article_id', 'filter_group_id')
    )

    # Добавление новых полей в таблицу articles
    op.add_column('articles', sa.Column('filter_tree_id', sa.Integer(), nullable=True))
    op.add_column('articles', sa.Column('filter_path', postgresql.JSON(astext_type=sa.Text()), nullable=True))
    op.create_foreign_key(None, 'articles', 'filter_trees', ['filter_tree_id'], ['id'])

    # Создание индексов для производительности
    op.create_index(op.f('ix_filter_trees_is_active'), 'filter_trees', ['is_active'], unique=False)
    op.create_index(op.f('ix_filter_institution_types_is_active'), 'filter_institution_types', ['is_active'], unique=False)
    op.create_index(op.f('ix_filter_generals_is_active'), 'filter_generals', ['is_active'], unique=False)
    op.create_index(op.f('ix_filter_cities_is_active'), 'filter_cities', ['is_active'], unique=False)
    op.create_index(op.f('ix_filter_study_programs_is_active'), 'filter_study_programs', ['is_active'], unique=False)
    op.create_index(op.f('ix_filter_courses_is_active'), 'filter_courses', ['is_active'], unique=False)
    op.create_index(op.f('ix_filter_education_forms_is_active'), 'filter_education_forms', ['is_active'], unique=False)
    op.create_index(op.f('ix_filter_city_instances_is_active'), 'filter_city_instances', ['is_active'], unique=False)
    op.create_index(op.f('ix_filter_groups_is_active'), 'filter_groups', ['is_active'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Удаление индексов
    op.drop_index(op.f('ix_filter_groups_is_active'), table_name='filter_groups')
    op.drop_index(op.f('ix_filter_city_instances_is_active'), table_name='filter_city_instances')
    op.drop_index(op.f('ix_filter_education_forms_is_active'), table_name='filter_education_forms')
    op.drop_index(op.f('ix_filter_courses_is_active'), table_name='filter_courses')
    op.drop_index(op.f('ix_filter_study_programs_is_active'), table_name='filter_study_programs')
    op.drop_index(op.f('ix_filter_cities_is_active'), table_name='filter_cities')
    op.drop_index(op.f('ix_filter_generals_is_active'), table_name='filter_generals')
    op.drop_index(op.f('ix_filter_institution_types_is_active'), table_name='filter_institution_types')
    op.drop_index(op.f('ix_filter_trees_is_active'), table_name='filter_trees')

    # Удаление новых полей из таблицы articles
    op.drop_constraint(None, 'articles', type_='foreignkey')
    op.drop_column('articles', 'filter_path')
    op.drop_column('articles', 'filter_tree_id')

    # Удаление таблиц
    op.drop_table('article_filters')
    op.drop_table('filter_groups')
    op.drop_table('filter_city_instances')
    op.drop_table('filter_education_forms')
    op.drop_table('filter_courses')
    op.drop_table('filter_study_programs')
    op.drop_table('filter_cities')
    op.drop_table('filter_generals')
    op.drop_table('filter_institution_types')
    op.drop_table('filter_trees')

    # ### end Alembic commands ###
